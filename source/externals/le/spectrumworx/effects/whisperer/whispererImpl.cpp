////////////////////////////////////////////////////////////////////////////////
///
/// whispererImpl.cpp
/// -----------------
///
/// Copyright (c) 2009 - 2016. Little Endian Ltd. All rights reserved.
///
////////////////////////////////////////////////////////////////////////////////
//------------------------------------------------------------------------------
#include "whispererImpl.hpp"

#include "le/math/constants.hpp"
#include "le/math/math.hpp"
#include "le/spectrumworx/engine/channelDataAmPh.hpp"
//------------------------------------------------------------------------------
namespace LE
{
//------------------------------------------------------------------------------
namespace SW
{
//------------------------------------------------------------------------------
namespace Effects
{
//------------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////
//
// Whisperer static member definitions.
//
////////////////////////////////////////////////////////////////////////////////

char const Whisperer::title      [] = "Whisperer";
char const Whisperer::description[] = "Whispering sound.";


////////////////////////////////////////////////////////////////////////////////
//
// WhispererImpl::process()
// ------------------------
//
////////////////////////////////////////////////////////////////////////////////

void WhispererImpl::process( Engine::ChannelData_AmPh data, Engine::Setup const & ) const
{
    using namespace Math;
    for ( auto & phase : data.phases() )
    {
        phase = rangedRand( Math::Constants::twoPi );
    }
}

//------------------------------------------------------------------------------
} // namespace Effects
//------------------------------------------------------------------------------
} // namespace SW
//------------------------------------------------------------------------------
} // namespace LE
//------------------------------------------------------------------------------
