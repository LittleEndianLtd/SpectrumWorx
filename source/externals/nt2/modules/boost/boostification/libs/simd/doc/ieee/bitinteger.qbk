[section bitinteger]

[h5 Description]
In the ieee standard the bit patterns representing real numbers
(float and double) are such that the ordering of real positive numbers
is identical to the ordering of the integers formed by the same bit pattern.

Some more work (merely substracting the integer bits to a specified constant)
allows to extend the ordering correspondance to the whole real numbers ranges

bitfloating is the part of the transform that map a floating (SIMD vector) value
to the corresponding an integer (SIMD vector) value.

This function is generally not intended for direct use, but is used in
implementing fast next and successor functors.

[h5 Synopsis]
    namespace boost { namespace simd
    {
      template <class A0>
      typename dispatch::meta::as_integer<A0>::type bitinteger(A0 const& a0);
    } }


[table Template Parameters
    [[Parameter] [Requirement] [Description]]
]

[table Parameters
    [[Parameter] [Description]]
]

[h5 Header]
   #include <boost/simd/toolbox/ieee/include/bitinteger.hpp>
[h5 Expression Semantics]

[*Return type: ]

[*Semantics:   ]

[h5 Example]

[endsect]
