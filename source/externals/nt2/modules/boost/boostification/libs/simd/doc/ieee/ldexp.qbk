[section ldexp]

[h5 Description]
This functor acts similarly as the standard `ldexp` function returning the combination
of the mantissa (first parameter) and the exponent (second parameter) as `m*2^e`

In SIMD case the exponent and mantissa type must be related by as_integer meta function

That is `nt2::int32_t` for `float` and `nt2::int64_t` for `double`

Use `fast_ldexp` if your data is never invalid (`nan`, `inf`, `-inf`) or if you don't care in these cases

[h5 Synopsis]
    namespace boost { namespace simd
    {
      template <class A0, class A1>
      __unspecified__ ldexp(A0 const& a0, A1 const& a1);
    } }

[table Template Parameters
    [[Parameter] [Requirement] [Description]]
]

[table Parameters
    [[Parameter] [Description]]
]

[h5 Header]
   #include <boost/simd/toolbox/ieee/include/ldexp.hpp>
[h5 Expression Semantics]

[*Return type: ]

[*Semantics:   ]

[h5 Example]

[endsect]
