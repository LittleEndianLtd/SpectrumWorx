[section ulpdist]

[h5 Description]

return the unit in the last bit distance beetween the two inputs.

The ulpdist is a way to answer to relative errors estimations
and peculiarly in the scope of limited bits accuracy of floating point representation.

The method is the following:

#    Properly normalize the two numbers by the same factor in a way that
     the largest of the two numbers exponents will be brought to zero

#    Return the absolute difference of these normalized numbers
     divided by the rounding error Eps

The rounding error is the ulp (unit in the last place) value, i.e. the
floating number, the exponent of which is 0 and the mantissa is all zeros
but a 1 in the last digit (it is not hard coded that way however).
This means 2^-23 for floats and 2^-52 for double (see Eps and eps)

For instance if two floating numbers (of same type) have an ulpdist of
zero that means that their floating representation are identical.

Generally equality up to 0.5 ulp is the best that one can wish beyond
strict equality.

Typically if a `double` is compared to the double representation of
its floating conversion (they are exceptions as for fully representable
reals) the ulpdist will be around 2^26.5 (~10^8)

The ulpdist is also roughly equivalent to the number of representable
floating points values between two given floating points values.

``
ulpdist( 1.0, 1+boost::simd::Eps<double>())   == 0.5
ulpdist( 1.0, 1+boost::simd::Eps<double>()/2) == 0.0
ulpdist( 1.0, 1-boost::simd::Eps<double>()/2) == 0.25
ulpdist( 1.0, 1-boost::simd::Eps<double>())   == 0.5
ulpdist(double(boost::simd::Pi<float>()), boost::simd::Pi<double>()) == 9.84293e+07
``



[h5 Synopsis]
    namespace boost { namespace simd
    {
      template <class A0, class A1>
      __unspecified__ ulpdist(A0 const& a0, A1 const& a1);
    } }

[table Template Parameters
    [[Parameter] [Requirement] [Description]]
]

[table Parameters
    [[Parameter] [Description]]
]

[h5 Header]
   #include <boost/simd/toolbox/ieee/include/ulpdist.hpp>
[h5 Expression Semantics]

[*Return type: ]

[*Semantics:   ]

[h5 Example]

[endsect]
