[section Mathematical constants]

Matlab has few predefined mathematical constants. __NT2__ a lot more.

We urge to use __NT2__ constants whereever possible, they all begin with an upper case character,
and need a type and are called as nullary template functions.

In the following table `T` is the current data type and the __MATLAB__ formula or value corresponds to `double`.

[table:id Mathematical constants from Matlab
[[__MATLAB__  ][ __NT2__             ][ Description                         ]]
[[`eps      `][ `Eps<T>()        `][Floating-point relative accuracy                   ]]
[[`i        `][ `I<T>()          `][Imaginary unit                                     ]]
[[`Inf      `][ `Inf<T>()        `][Infinity                                           ]]
[[`intmax   `][ `Valmax<T>()     `][Largest value of specified integer type            ]]
[[`intmin   `][ `Valmin<T>()     `][Smallest value of specified integer type           ]]
[[`j        `][ `I<T>()          `][Imaginary unit                                     ]]
[[`NaN      `][ `Nan<T>()        `][Not-a-Number                                       ]]
[[`pi       `][ `Pi<T>()         `][Ratio of circle's circumference to its diameter    ]]
[[`realmax  `][ `Valmax<T>()     `][Largest positive floating-point number             ]]
[[`realmin  `][ `Valmin<T>()     `][Smallest positive normalized floating-point number ]]
]


[table:id Mathematical constants from NT2
[[ __NT2__                 ][__MATLAB__          ][ Description                         ]]
[[`Allbits<T>()           `][`                  `][ `-1` for integers `-Nan` for floating (all bits are set) ]]
[[`Bitincrement<T>()      `][`                  `][ only the least significant bit is set and the result is casted to the required type       ]]
[[`C180<T>()              `][`180               `][ `T(180)` ]]
[[`Cgold<T>()             `][`(1-sqrt(5))/2     `][ congugate golden ratio ]]
[[`Eight<T>()             `][`8                 `][ `T(8)` ]]
[[`Eleven<T>()            `][`11                `][ `T(11)`]]
[[`Eps<T>()               `][`eps               `][ machine accuracy 1 for integers 2^(-23) for float,2^(-52) for double ]]
[[`Fact_10<T>()           `][`factorial(10)     `][`T(3628800)` ]]
[[`Fact_11<T>()           `][`factorial(11)     `][`T(39916800)` ]]
[[`Fact_12<T>()           `][`factorial(12)     `][`T(479001600)` ]]
[[`Fact_4<T>()            `][`factorial(4)      `][`T(24)` ]]
[[`Fact_5<T>()            `][`factorial(5)      `][`T(120)` ]]
[[`Fact_6<T>()            `][`factorial(6)      `][`T(720)` ]]
[[`Fact_7<T>()            `][`factorial(7)      `][`T(5040)` ]]
[[`Fact_8<T>()            `][`factorial(8)      `][`T(40320)` ]]
[[`Fact_9<T>()            `][`factorial(9)      `][`T(362880)` ]]
[[`False<T>()             `][`false             `][ logical false ]]
[[`Fifteen<T>()           `][`15                `][`T(15)` ]]
[[`Five<T>()              `][`5                 `][`T(5)` ]]
[[`Four<T>()              `][`4                 `][`T(4)` ]]
[[`Fourthrooteps<T>()     `][`sqrt(sqrt(eps))       `][` Eps to 1/4]]
[[`Gold<T>()              `][`(1-sqrt(5))/2     `][ golden ratio ]]
[[`Halfeps<T>()           `][`halfeps           `][ half Eps i.e. 0 for integers, 2^(-24) for float, 2^(-53) for double ]]
[[`Half<T>()              `][`0.5               `][ `T(0.5)`]]
[[`Hundred<T>()           `][`100               `][ `T(100)` ]]
[[`I<T>()                 `][`i                 `][ Imaginary unit                                     ]]
[[`Inf<T>()               `][`inf               `][ IEEE754 Infinity value for floating numbers and Valmax for integers]]
[[`Ldexpmask<T>()         `][`                  `][ mask to extract the exponent bits of a floating point value]]
[[`Log10_pi<T>()          `][`log10(pi)         `][ base ten logarithm of pi]]
[[`Maxexponent<T>()       `][`1023              `][ maximum value for floating exponent (`127` for float) ]]
[[`Maxinit<T>()           `][`                  `][ init value for functor max, i.e. `Minf` for reals, `0` for complex]]
[[`Maxleftshift<T>()      `][`                  `][ number of bits minus one, of the value type ]]
[[`Meight<T>()            `][`-8                `][ `T(-8)`]]
[[`Mfive<T>()             `][`-5                `][ `T(-5)`]]
[[`Mfour<T>()             `][`-4                `][ `T(-4)` ]]
[[`Mhalf<T>()             `][`-0.5              `][ `T(-0.5)`]]
[[`Mindenormal<T>()       `][`4940656458412465e-324`][ the least non zero positive value of floating point numbers (1.4012985e-45 for float) ]]
[[`Minexponent<T>()       `][`-1022             `][ minimum value of the exponent for floating numbers (-126 for float)]]
[[`Minf<T>()              `][`-inf              `][ IEEE754 -Infinity value for floating numbers and Valmin for integers (this means 0 for unsigned types!)]]
[[`Mlogeps2<T>()          `][`                  `][ - 2 times the natural logarithm of Eps]]
[[`Mnine<T>()             `][`-9                `][ `T(-9)` ]]
[[`Mone<T>()              `][`-1                `][ `T(-1)` ]]
[[`Moneo_6<T>()           `][`-1/6              `][ `T(-1.0/6.0)` ]]
[[`Mseven<T>()            `][`-7                `][ `T(-7)`]]
[[`Msix<T>()              `][`-6                `][ `T(-6)` ]]
[[`Mten<T>()              `][`-10               `][ `T(-10)` ]]
[[`Mthree<T>()            `][`-3                `][ `T(-3)`]]
[[`Mtwo<T>()              `][`-2                `][ `T(-2)` ]]
[[`Mzero<T>()             `][`-0                `][ `T(-8)` ]]
[[`Nan<T>()               `][`nan               `][ IEEE754 Not a Number, 0 for integers]]
[[`Nbdigits<T>()          `][`53                `][ binary digits number  for floting numbers (24 for float) ]]
[[`Nbexponentbits<T>()    `][`nbexponentbits    `][ 11 binary digits for double and 8 for float]]
[[`Nbmantissabits<T>()    `][`nbmantissabits    `][ 52 binary digits for double and 23 for float]]
[[`Nine<T>()              `][`9                 `][ `T(9)` ]]
[[`One <T>()              `][`1                 `][ `T(0)`]]
[[`Oneo_10<T>()           `][`1/10              `][ `T(1.0/10.0)`]]
[[`Oneo_120<T>()          `][`1/120             `][ `T(1.0/120.0)`]]
[[`Oneo_12<T>()           `][`1/12              `][ `T(1.0/12.0)`]]
[[`Oneo_15<T>()           `][`1/15              `][ `T(1.0/15.0)`]]
[[`Oneo_180<T>()          `][`1/180             `][ `T(1.0/180.0)`]]
[[`Oneo_5<T>()            `][`1/5               `][ `T(1.0/5.0)`]]
[[`Oneo_6<T>()            `][`1/6               `][ `T(1.0/6.0)`]]
[[`Oneo_7<T>()            `][`1/7               `][ `T(1.0/7.0)`]]
[[`Oneo_8<T>()            `][`1/8               `][ `T(1.0/8.0)`]]
[[`Oneo_9<T>()            `][`1/9               `][ `T(1.0/9.0)`]]
[[`Pi<T>()                `][`pi                `][ half length of a circle of radius one]]
[[`Pio_2<T>()             `][`pi/2              `][ quarter length of a circle of radius one ]]
[[`Quarter<T>()           `][`quarter           `][ `T(1.0/4.0)`]]
[[`Seven<T>()             `][`7                 `][ `T(7)`]]
[[`Signmask<T>()          `][`-0                `][ only the most significant bit is set and the result is casted to the required type]]
[[`Six<T>()               `][`six               `][ `T(6)`]]
[[`Smallestposval<T>()    `][`realmin           `][ least non zero positive normalized value of floating point numbers, (1.1754944e-38 for float)]]
[[`Splitfactor<T>()       `][`134217728         `][ `2^(11)` for float, `2^(27)` for double )]]
[[`Sqrt_1o_5<T>()         `][`sqrt(1/5)         `][ T(sqrt(0.2)]]
[[`Sqrt_2<T>()            `][`sqrt(2)           `][ square root of 2]]
[[`Sqrt_2o_2<T>()         `][`sqrt(2)/2         `][ half of square root of 2 ]]
[[`Sqrt_2o_3<T>()         `][`sqrt(2)/3         `][ third of square root of 2 ]]
[[`Sqrteps<T>()           `][`sqrteps           `][ square root of Eps]]
[[`Sqrtsmallestposval<T>()`][`sqrtsmallestposval`][ square root of Smallestposval ]]
[[`Sqrtvalmax<T>()        `][`sqrtvalmax        `][ square root of Valmax]]
[[`Ten<T>()               `][`10                `][ `T(10)`]]
[[`Third<T>()             `][`1/3               `][ `T(1.0/3.0)`]]
[[`Thirdrooteps<T>()      `][`thirdrooteps      `][ cubic root of Eps]]
[[`Thousand<T>()          `][`1000              `][ T(1000)]]
[[`Threeeps<T>()          `][`3*eps             `][ 3 times Eps ]]
[[`Three<T>()             `][`3                 `][ `T(3)`]]
[[`True<T>()              `][`true              `][ logical true ]]
[[`Twelve<T>()            `][`12                `][ `T(12)`]]
[[`Twenty<T>()            `][`20                `][ `T(20)` ]]
[[`Two<T>()               `][`2                 `][ `T(2)`]]
[[`Twoto31<T>()           `][`2^31              `][ 2^31]]
[[`Twotom10<T>()          `][` 2^(-10)          `][ 2^(-10)]]
[[`Twotonmb<T>()          `][` 2^(52)           `][ two to Nbmantissabits ]]
[[`Valmax<T>()            `][`realmax           `][ maximal non infinite value for type T]]
[[`Valmin<T>()            `][`realmin           `][ mimimal non infinite value for type T]]
[[`Zero<T>()              `][`0                 `][ T(0) ]]
]

[endsect]
